--- video_qhy5ii.cpp	2016-04-25 08:58:47.000000000 +0000
+++ video_qhy5ii.cpp.new	2017-04-10 01:03:38.000000000 +0000
@@ -250,76 +250,41 @@
 
 	if( m_dev_type == DEVICETYPE_QHY5LII )
 	{
+		/*
+	 	 * Modify to support iAstroHub, by Anat & Zachary.
+	 	 * Remove all the exposure time greater than 4 sec.
+	 	 * iAstruHub uses the exposure time 1s, 2s and 4s. 
+	 	 */
 		pt.x = QHY5LII_WIDTH_B4;
 		pt.y = QHY5LII_HEIGHT_B4;
 		device_formats[0].frame_table[ i ].size =  pt;
-		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 10, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 5, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 4, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 3 ] = time_fract::mk_fps( 3, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 4 ] = time_fract::mk_fps( 2, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 5 ] = time_fract::mk_fps( 1, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 6 ] = time_fract::mk_fps( 1, 2 );
-		device_formats[0].frame_table[ i ].fps_table[ 7 ] = time_fract::mk_fps( 1, 3 );
-		device_formats[0].frame_table[ i ].fps_table[ 8 ] = time_fract::mk_fps( 1, 4 );
-		#ifndef __arm__
-		device_formats[0].frame_table[ i ].fps_table[ 9 ] = time_fract::mk_fps( 1, 5 );
-		device_formats[0].frame_table[ i ].fps_table[ 10 ] = time_fract::mk_fps( 1, 10 );
-		#endif
+		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 2, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 1, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 1, 2 );
 		i++;
 
 		pt.x = QHY5LII_WIDTH_B3;
 		pt.y = QHY5LII_HEIGHT_B3;
 		device_formats[0].frame_table[ i ].size =  pt;
-		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 10, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 5, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 4, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 3 ] = time_fract::mk_fps( 3, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 4 ] = time_fract::mk_fps( 2, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 5 ] = time_fract::mk_fps( 1, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 6 ] = time_fract::mk_fps( 1, 2 );
-		device_formats[0].frame_table[ i ].fps_table[ 7 ] = time_fract::mk_fps( 1, 3 );
-		device_formats[0].frame_table[ i ].fps_table[ 8 ] = time_fract::mk_fps( 1, 4 );
-		device_formats[0].frame_table[ i ].fps_table[ 9 ] = time_fract::mk_fps( 1, 5 );
-		#ifndef __arm__
-		device_formats[0].frame_table[ i ].fps_table[ 10 ] = time_fract::mk_fps( 1, 10 );
-		#endif
+		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 2, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 1, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 1, 2 );
 		i++;
 
 		pt.x = QHY5LII_WIDTH_B2;
 		pt.y = QHY5LII_HEIGHT_B2;
 		device_formats[0].frame_table[ i ].size =  pt;
-		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 10, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 5, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 4, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 3 ] = time_fract::mk_fps( 3, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 4 ] = time_fract::mk_fps( 2, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 5 ] = time_fract::mk_fps( 1, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 6 ] = time_fract::mk_fps( 1, 2 );
-		device_formats[0].frame_table[ i ].fps_table[ 7 ] = time_fract::mk_fps( 1, 3 );
-		device_formats[0].frame_table[ i ].fps_table[ 8 ] = time_fract::mk_fps( 1, 4 );
-		#ifndef __arm__
-		device_formats[0].frame_table[ i ].fps_table[ 9 ] = time_fract::mk_fps( 1, 5 );
-		device_formats[0].frame_table[ i ].fps_table[ 10 ] = time_fract::mk_fps( 1, 10 );
-		#endif
+		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 2, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 1, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 1, 2 );
 		i++;
 
 		pt.x = QHY5LII_WIDTH_B1;
 		pt.y = QHY5LII_HEIGHT_B1;
 		device_formats[0].frame_table[ i ].size =  pt;
-		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 10, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 5, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 4, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 3 ] = time_fract::mk_fps( 3, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 4 ] = time_fract::mk_fps( 2, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 5 ] = time_fract::mk_fps( 1, 1 );
-		device_formats[0].frame_table[ i ].fps_table[ 6 ] = time_fract::mk_fps( 1, 2 );
-		device_formats[0].frame_table[ i ].fps_table[ 7 ] = time_fract::mk_fps( 1, 3 );
-		#ifndef __arm__
-		device_formats[0].frame_table[ i ].fps_table[ 8 ] = time_fract::mk_fps( 1, 4 );
-		device_formats[0].frame_table[ i ].fps_table[ 9 ] = time_fract::mk_fps( 1, 5 );
-		device_formats[0].frame_table[ i ].fps_table[ 10 ] = time_fract::mk_fps( 1, 10 );
-		#endif
+		device_formats[0].frame_table[ i ].fps_table[ 0 ] = time_fract::mk_fps( 2, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 1 ] = time_fract::mk_fps( 1, 1 );
+		device_formats[0].frame_table[ i ].fps_table[ 2 ] = time_fract::mk_fps( 1, 2 );
 		i++;
 	}
 	else
