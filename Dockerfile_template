ENV DEBIAN_FRONTEND=noninteractive

# 3. System Update
RUN apt-get -y update
RUN apt-get -y upgrade

# Download Astrometry data set as early as possible in Docker cache to minimize
# the chance of it being invalidated.
RUN mkdir -p /usr/local/astrometry/data/
WORKDIR /usr/local/astrometry/data/
RUN apt-get -y install wget
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-00.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-01.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-02.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-03.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-04.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-05.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-06.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-07.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-08.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-09.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-10.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4207-11.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4208.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4209.fits
RUN wget http://broiler.astrometry.net/~dstn/4200/index-4210.fits
WORKDIR /

# 5. Install tools
RUN apt-get -y install \
  aptitude \
  bc \
  build-essential \
  g++ \
  gcc \
  make \
  nano \
  usbutils \
  wget

# 10. Pushover Notification
RUN apt-get -y install \
  curl \
  libwww-perl

# 11. Hostname
RUN echo "iAstroHub" > /etc/hostname
# 127.0.1.1 was used in the initial README; I believe it should be 127.0.0.1.
RUN echo "127.0.0.1 iAstroHub" >> /etc/hosts

# 12. Skychart
RUN apt-get -y install \
  espeak \
  libglu1-mesa \
  libgtk2.0-0 \
  libpango1.0-0 \
  xplanet
RUN mkdir /skychart
WORKDIR /skychart
# Install on Raspbian/arm
RUN uname -a | grep arm && wget http://sourceforge.net/projects/libpasastro/files/version%201.1/libpasastro_1.1-15_armhf.deb || true
RUN uname -a | grep arm && dpkg -i libpasastro_1.1-15_armhf.deb || true
RUN uname -a | grep arm && wget http://sourceforge.net/projects/skychart/files/1-software/version_4.0/skychart_4.0-3575b_armhf.deb || true
RUN uname -a | grep arm && dpkg -i skychart_4.0-3575b_armhf.deb || true
# Install on Debian/x64
RUN uname -a | grep x86_64 && wget http://sourceforge.net/projects/libpasastro/files/version%201.1/libpasastro_1.1-14_amd64.deb || true
RUN uname -a | grep x86_64 && dpkg -i libpasastro_1.1-14_amd64.deb || true
RUN uname -a | grep x86_64 && wget http://sourceforge.net/projects/skychart/files/1-software/version_4.0/skychart_4.0-3575b_amd64.deb || true
RUN uname -a | grep x86_64 && dpkg -i skychart_4.0-3575b_amd64.deb || true
# Correct dependencies after manual package installation.
RUN apt-get -fy install
# Install data set
RUN wget http://sourceforge.net/projects/skychart/files/2-catalogs/Nebulea/skychart-data-pictures_4.0-3421_all.deb
RUN dpkg -i skychart-data-pictures_4.0-3421_all.deb
WORKDIR /

# 16. Pentax
RUN apt-get -y install ufraw ufraw-batch libgtk2.0-dev
RUN wget https://github.com/asalamon74/pktriggercord/releases/download/v0.84.00/pkTriggerCord-0.84.00.src.tar.gz
RUN tar xvf pkTriggerCord-0.84.00.src.tar.gz
WORKDIR pktriggercord-0.84.00/
RUN make
RUN make install
WORKDIR /

# 2. Login as root
RUN apt-get -y install sudo
RUN echo "ALL ALL=(ALL) NOPASSWD: ALL" | (EDITOR="tee -a" visudo)

# 8. xvfb and vnc
RUN apt-get -y install \
  x11vnc \
  xfonts-75dpi \
  xfonts-cyrillic \
  xfonts-scalable \
  xvfb

# 15. gphoto2
WORKDIR /home/pi
RUN wget https://raw.githubusercontent.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh
RUN chmod +x ./gphoto2-updater.sh
RUN ./gphoto2-updater.sh --stable
WORKDIR /

# Copy patches as late as we can in the Docker cache, as any changes will cause
# an invalidation.
COPY patches /patches

# 7. Webserver
COPY www /home/pi/www
RUN chmod -R 777 /home/pi/www
RUN apt-get -y install \
  nginx \
  php5-cgi \
  php5-cli \
  php5-common \
  php5-fpm
RUN LOCATION=/etc/php5/cgi/php.ini; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN LOCATION=/etc/php5/cli/php.ini; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN LOCATION=/etc/php5/fpm/php.ini; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN LOCATION=/etc/nginx/sites-available/default; patch -b -i /patches/$LOCATION.patch $LOCATION

# 14. Dslrdashboard
RUN apt-get -y install \
  build-essential \
  git \
  libusb-1.0-0-dev \
  pkg-config
RUN git clone https://github.com/hubaiz/DslrDashboardServer.git /home/pi/DslrDashboardServer
WORKDIR /home/pi/DslrDashboardServer
RUN g++ -Wall src/main.cpp src/communicator.cpp `pkg-config --libs --cflags libusb-1.0` -lpthread -lrt -lstdc++ -o ddserver
RUN chmod +x ./ddserver
RUN cp ./ddserver /home/pi/www/
WORKDIR /

# 13. Astrometry
RUN apt-get -y install \
  libcairo2-dev \
  libjpeg-dev \
  libnetpbm10-dev \
  libpng12-dev \
  netpbm \
  python-dev \
  python-pip \
  python-pyfits \
  python-numpy \
  zlib1g-dev
RUN pip install pyephem
WORKDIR /home/pi
RUN wget http://www.astrometry.net/downloads/astrometry.net-0.40.tar.bz2
RUN tar xjf astrometry.net-0.40.tar.bz2
RUN rm astrometry.net-0.40.tar.bz2
RUN LOCATION=/home/pi/astrometry.net-0.40/blind/solve-field.c; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN LOCATION=/home/pi/astrometry.net-0.40/util/starutil.c; patch -b -i /patches/$LOCATION.patch $LOCATION
WORKDIR /home/pi/astrometry.net-0.40
RUN make
RUN make install
WORKDIR /

# 19. OpenSkyImager
RUN apt-get -y install \
  cmake \
  fxload \
  imagemagick \
  libcfitsio3-dev \
  libglib2.0-0 \
  libglib2.0-dev\
  libgtk2.0-0 \
  libgtk2.0-dev \
  libudev-dev
RUN git clone --depth 1 http://github.com/OpenSkyProject/OpenSkyImager.git /home/pi/OpenSkyImager
RUN LOCATION=/home/pi/OpenSkyImager/gtk/imgPixbuf.c; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN LOCATION=/home/pi/OpenSkyImager/gtk/imgWFuncs.c; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN LOCATION=/home/pi/OpenSkyImager/sbig/install_sbig.bash; patch -b -i /patches/$LOCATION.patch $LOCATION
RUN mkdir /home/pi/OpenSkyImager/build
WORKDIR /home/pi/OpenSkyImager/build
RUN cmake -D FORCE_GTK2=on  -D FORCE_QHY_ONLY=off ..
RUN make install
WORKDIR /
